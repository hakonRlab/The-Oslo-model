[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "hakonRlab.github.io",
    "section": "",
    "text": "The Oslo model\nA lymph node invasion prediction model for prostate cancer patients\nSample size calculation was done using the pmsampsize package. None of the evaluated models have published the R2 so this was not included in our sample size calulation.\n\nlibrary(pmsampsize)\nout &lt;- pmsampsize(type = \"b\", cstatistic  = 0.8, parameters = 20, prevalence = 0.25, shrinkage = 0.8)\nout$results_table\n\nImputing missing values with rmsb package\n\nlibrary(rmsb)\n\nset.seed(1999)         \nmi &lt;- aregImpute(~ pN + PSAutredn + ISUP3 + ISUP4 + ISUP5 + cT2a  + cT2b + cT2c + cT3 + PIRADS4 + PIRADS5  + cT_mr3a + cT_mr3b + MRindexTumorL1 + ProstVolum + BMI,\n                 data=plndbayes_mrpNimp, n.impute=10, nk=3, pr=FALSE)\n\nmi &lt;- aregImpute(~ pN + PSAutredn + ISUP + PIRADS345  + mr_cT + MRindexTumorL1 + ProstVolum + dre_cT + BMI + PercPosCores, data=plndbayes_mrpNimp, n.impute=10, nk=4, pr=FALSE, boot.method = 'approximate bayesian')\n\nBayesian logistic regression model development followed many suggestions from the Regression Modeling Strategies by Frank Harrell. Used the rmsb package and the imputed data sets generated in the previous code chunk.\n\nOslomodelFull &lt;- stackMI(formula = pN ~ rcs(PSA,4)*rcs(ProstateVolume,4) + ISUP  + dre_cT  + PIRADS345  + mr_cT + rcs(MRindexTumorL1,4)  + rcs(BMI,4) +\n                              rcs(PercPosCores,4), fitter = blrm, xtrans = mi, data=plndbayes_mrpNimp, iter = 4000, warmup = 2000 , chain = 4, file='OslomodelFull.RDS')\n\n\nplot(anova(akermodellenAlle)) # Relative explained variation of variables\n\nOslomodelFinal &lt;- stackMI(formula = pN ~ rcs(PSA,4)*rcs(ProstateVolume,4) + ISUP + mr_cT + rcs(MRindexTumorL1,4), fitter = blrm, xtrans = mi, data=plndbayes_mrpNimp, iter = 4000, warmup = 2000 , chain = 4, file='OslomodellenFinal.RDS')\n\nVariable selection with the projpred package\n\nlibrary(projpred)\n\nplot(anova(akermodellenAlle),  cex.lab = 1.2, cex.axis = 12)\n\nplot(anova(akermodellen2),  cex.lab = 1.2, cex.axis = 12)\n\nakaerteset &lt;- vcov(akermodellenAlle, regcoef.only = TRUE, intercepts = \"all\")\n\nakertest &lt;- brms::get_refmodel.brmsfit(akermodellenAlle)\n\n\ncvvs_imp1 &lt;- cv_varsel(m3varsel,\n                       validate_search = FALSE,\n                       method = \"forward\",\n                       ncluster_pred = 20,\n                       nterms_max = 20,\n                       verbose = FALSE)\nplot(cvvs_imp1, stats = \"mlpd\", ranking_ntrems_max = NA)\n\nplot(anova(akermodellen1))\n\n\nval_aker_anov &lt;- processMI(akermodellen, 'anova')\nval_aker &lt;- validate(akermodellenAlle, B=150, bw=TRUE, rule = 'p', sls = 0.1, type = 'individual')\n\n\ncvvs_imp1 &lt;- cv_varsel(m3varsel,\n                       cv_method = \"kfold\",\n                       method =\"forward\",\n                       k=10,\n                       ncluster_pred = 20,\n                       nterms_max = 9,\n                       parallel = TRUE,\n                       verbose = FALSE)\n\nplot(cvvs_imp1, stats = \"mlpd\", deltas  = TRUE)\n\nsuggest_size(cvvs_imp1)\n\nThe Evaluating a logistic regression based prediction tool in R by Darren Dahly was used with minor modifications of the distribution plot.\n\n    g2 &lt;- ggplot(caldata, aes(x = pred_var, fill = alive)) +\n      geom_histogram(aes(fill = alive), bins = 200) +\n      geom_text(aes(x=.5, y=8,label=\"pN1\", color = \"red\")) +\n       geom_text(aes(x=.3, y=8,label=\"pN0\", color = \"blue\")) +\n      scale_x_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +\n      xlab(\"Predicted Probability\") +\n      ylab(\"count\") +\n      theme_minimal() +\n      scale_y_continuous(breaks = c(0,5,10)) +\n      theme(panel.grid.minor = element_blank(), legend.position = \"none\")\n\n\n\nThe resources at Decission Curve Analyses was used as a guideline for the net reduction plot.\n\nlibrary(dcurves)\nlibrary(plotly)\nlibrary(ggplot2)\nload(\"imp8dca\")\noslo &lt;- dca(pN ~ predprob + bri2019 + bri2019recal + bri2019refit, data = imp8dca,\n    thresholds = seq(0, 0.4, 0.01),\n    label = list(predprob = \"Oslo model\",\n                 bri2019 = \"Briganti 2019\",\n                 bri2019recal = \"Briganti 2019 recalibrated\",\n                 bri2019refit = \"Briganti 2019 refited\")\n    ) %&gt;% \n  net_intervention_avoided() %&gt;% \n  plot(smooth = TRUE, show_ggplot_code = TRUE)+\n  ggplot2::coord_cartesian(ylim = c(-0.05, 0.4))+\n  ggplot2::theme(text = element_text(size=16))\n \nggplotly(oslo)\n\n\n\nMSKCC\nBriganti 2012\nBriganti 2019"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]